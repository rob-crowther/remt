#!/usr/bin/env python3
#
# remt - reMarkable tablet tools
#
# Copyright (C) 2018 by Artur Wroblewski <wrobell@riseup.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import asyncio
import asyncssh
import configparser
import json
import os
import os.path


BASE_DIR = '/home/root/.local/share/remarkable/xochitl/'


async def exec(*args):
    cmd = ' '.join('{}'.format(v) for v in args)

    conf_file = os.path.join(os.environ['HOME'], '.config', 'remt.ini')
    cp = configparser.ConfigParser()
    cp.read(conf_file)

    host = cp.get('connection', 'host')
    user = cp.get('connection', 'user')
    password = cp.get('connection', 'password')

    ctx = asyncssh.connect(host, username=user, password=password)
    async with ctx as conn:
        result = await conn.run(cmd, check=True)
        return result.stdout


async def list_meta():
    data = await exec('ls', BASE_DIR + '*.metadata')
    items = data.split('\n')
    items = (v.replace(BASE_DIR, '') for v in items)
    items = (v for v in items if v)
    return items


async def read_file(name):
    data = await exec('cat', BASE_DIR + name)
    return data


async def read_meta():
    files = await list_meta()
    files = (fn.replace('.metadata', '') for fn in files)

    # read all metadata in one go for speed; note that this depends on the
    # order of files returned by `list_meta`
    data = await read_file('*.metadata')
    data = data.replace('\n', '')
    data = data.replace('}{', '},{')
    data = '[' + data + ']'
    data = json.loads(data)
    return {fn: v for fn, v in zip(files, data)}


def get_fn(data, meta):
    parent = data.get('parent')
    name = data['visibleName']
    if parent:
        return get_fn(meta[parent], meta) + '/' + name
    else:
        return name
        

async def cmd_ls():
    meta = await read_meta()
    return [get_fn(data, meta) for data in meta.values()]
         

loop = asyncio.get_event_loop()
items = loop.run_until_complete(cmd_ls())
for fn in sorted(items):
    print(fn)
